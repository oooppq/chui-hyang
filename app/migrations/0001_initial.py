# Generated by Django 4.0.6 on 2022-08-10 06:46

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Note_base',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Note_middle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Note_top',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Perfume',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('brand', models.CharField(max_length=50)),
                ('country', models.CharField(max_length=50, null=True)),
                ('explain', models.CharField(max_length=200, null=True)),
                ('season', models.CharField(choices=[('spring', 'spring'), ('winter', 'winter'), ('fall', 'fall'), ('summer', 'summer')], max_length=20, null=True)),
                ('price', models.IntegerField(null=True)),
                ('flavor', models.CharField(choices=[('fresh', 'fresh'), ('floral', 'floral'), ('Woody', 'woody'), ('oriental', 'oriental')], max_length=20, null=True)),
                ('gender', models.CharField(choices=[('man', 'man'), ('woman', 'woman')], max_length=20, null=True)),
                ('age', models.CharField(choices=[('50 or more', '50 or more'), ('30', '30'), ('40', '40'), ('10', '10'), ('20', '20')], max_length=20, null=True)),
                ('situation', models.CharField(max_length=50, null=True)),
                ('notes_base', models.ManyToManyField(to='app.note_base')),
                ('notes_middle', models.ManyToManyField(to='app.note_middle')),
                ('notes_top', models.ManyToManyField(to='app.note_top')),
            ],
        ),
        migrations.CreateModel(
            name='Perfumer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('power', models.CharField(choices=[('bad', 'bad'), ('moderate', 'moderate'), ('good', 'good')], max_length=20, null=True)),
                ('type_explain', models.TextField(null=True)),
                ('content', models.TextField()),
                ('first_scent', models.TextField(null=True)),
                ('put_scent', models.TextField(null=True)),
                ('rest_scent', models.TextField(null=True)),
                ('perfume', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.perfume')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='perfume',
            name='perfumers',
            field=models.ManyToManyField(to='app.perfumer'),
        ),
    ]
